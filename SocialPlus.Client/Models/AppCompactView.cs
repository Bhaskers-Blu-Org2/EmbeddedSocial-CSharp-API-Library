// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
// the MIT License. See LICENSE in the project root for license information.
// <autogenerated> This file was generated using AutoRest. </autogenerated>

namespace SocialPlus.Client.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// App compact view
    /// </summary>
    public partial class AppCompactView
    {
        /// <summary>
        /// Initializes a new instance of the AppCompactView class.
        /// </summary>
        public AppCompactView() { }

        /// <summary>
        /// Initializes a new instance of the AppCompactView class.
        /// </summary>
        public AppCompactView(string name, PlatformType platformType, string iconHandle = default(string), string iconUrl = default(string), string deepLink = default(string), string storeLink = default(string))
        {
            Name = name;
            IconHandle = iconHandle;
            IconUrl = iconUrl;
            PlatformType = platformType;
            DeepLink = deepLink;
            StoreLink = storeLink;
        }

        /// <summary>
        /// Gets or sets app name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets app icon handle
        /// </summary>
        [JsonProperty(PropertyName = "iconHandle")]
        public string IconHandle { get; set; }

        /// <summary>
        /// Gets or sets app icon url
        /// </summary>
        [JsonProperty(PropertyName = "iconUrl")]
        public string IconUrl { get; set; }

        /// <summary>
        /// Gets or sets platform type. Possible values include: 'Windows',
        /// 'Android', 'IOS'
        /// </summary>
        [JsonProperty(PropertyName = "platformType")]
        public PlatformType PlatformType { get; set; }

        /// <summary>
        /// Gets or sets app deep link
        /// </summary>
        [JsonProperty(PropertyName = "deepLink")]
        public string DeepLink { get; set; }

        /// <summary>
        /// Gets or sets app store link
        /// </summary>
        [JsonProperty(PropertyName = "storeLink")]
        public string StoreLink { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
