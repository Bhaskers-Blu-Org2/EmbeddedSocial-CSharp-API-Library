// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
// the MIT License. See LICENSE in the project root for license information.
// <autogenerated> This file was generated using AutoRest. </autogenerated>

namespace SocialPlus.Client.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// User profile view
    /// </summary>
    public partial class UserProfileView
    {
        /// <summary>
        /// Initializes a new instance of the UserProfileView class.
        /// </summary>
        public UserProfileView() { }

        /// <summary>
        /// Initializes a new instance of the UserProfileView class.
        /// </summary>
        public UserProfileView(string userHandle, string firstName, string lastName, string bio, string photoHandle, string photoUrl, Visibility visibility, long totalTopics, long totalFollowers, long totalFollowing, FollowerStatus followerStatus, FollowingStatus followingStatus, ProfileStatus profileStatus)
        {
            UserHandle = userHandle;
            FirstName = firstName;
            LastName = lastName;
            Bio = bio;
            PhotoHandle = photoHandle;
            PhotoUrl = photoUrl;
            Visibility = visibility;
            TotalTopics = totalTopics;
            TotalFollowers = totalFollowers;
            TotalFollowing = totalFollowing;
            FollowerStatus = followerStatus;
            FollowingStatus = followingStatus;
            ProfileStatus = profileStatus;
        }

        /// <summary>
        /// Gets or sets user handle
        /// </summary>
        [JsonProperty(PropertyName = "userHandle")]
        public string UserHandle { get; set; }

        /// <summary>
        /// Gets or sets first name of the user
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or sets last name of the user
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or sets short bio of the user
        /// </summary>
        [JsonProperty(PropertyName = "bio")]
        public string Bio { get; set; }

        /// <summary>
        /// Gets or sets photo handle of the user
        /// </summary>
        [JsonProperty(PropertyName = "photoHandle")]
        public string PhotoHandle { get; set; }

        /// <summary>
        /// Gets or sets photo url of the user
        /// </summary>
        [JsonProperty(PropertyName = "photoUrl")]
        public string PhotoUrl { get; set; }

        /// <summary>
        /// Gets or sets visibility of the user. Possible values include:
        /// 'Public', 'Private'
        /// </summary>
        [JsonProperty(PropertyName = "visibility")]
        public Visibility Visibility { get; set; }

        /// <summary>
        /// Gets or sets total topics posted by user
        /// </summary>
        [JsonProperty(PropertyName = "totalTopics")]
        public long TotalTopics { get; set; }

        /// <summary>
        /// Gets or sets total followers for the user
        /// </summary>
        [JsonProperty(PropertyName = "totalFollowers")]
        public long TotalFollowers { get; set; }

        /// <summary>
        /// Gets or sets total following users
        /// </summary>
        [JsonProperty(PropertyName = "totalFollowing")]
        public long TotalFollowing { get; set; }

        /// <summary>
        /// Gets or sets follower relationship status of the querying user.
        /// Possible values include: 'None', 'Follow', 'Pending', 'Blocked'
        /// </summary>
        [JsonProperty(PropertyName = "followerStatus")]
        public FollowerStatus FollowerStatus { get; set; }

        /// <summary>
        /// Gets or sets following relationship status of the querying user.
        /// Possible values include: 'None', 'Follow', 'Pending', 'Blocked'
        /// </summary>
        [JsonProperty(PropertyName = "followingStatus")]
        public FollowingStatus FollowingStatus { get; set; }

        /// <summary>
        /// Gets or sets user profile status. Possible values include:
        /// 'Active', 'Banned', 'Mature', 'Clean'
        /// </summary>
        [JsonProperty(PropertyName = "profileStatus")]
        public ProfileStatus ProfileStatus { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (UserHandle == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UserHandle");
            }
            if (FirstName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FirstName");
            }
            if (LastName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LastName");
            }
            if (Bio == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Bio");
            }
            if (PhotoHandle == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PhotoHandle");
            }
            if (PhotoUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PhotoUrl");
            }
        }
    }
}
