// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
// the MIT License. See LICENSE in the project root for license information.
// <autogenerated> This file was generated using AutoRest. </autogenerated>

namespace SocialPlus.Client.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Request to post (create) comment
    /// </summary>
    public partial class PostCommentRequest
    {
        /// <summary>
        /// Initializes a new instance of the PostCommentRequest class.
        /// </summary>
        public PostCommentRequest() { }

        /// <summary>
        /// Initializes a new instance of the PostCommentRequest class.
        /// </summary>
        public PostCommentRequest(string text, BlobType? blobType = default(BlobType?), string blobHandle = default(string), string language = default(string))
        {
            Text = text;
            BlobType = blobType;
            BlobHandle = blobHandle;
            Language = language;
        }

        /// <summary>
        /// Gets or sets comment text
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

        /// <summary>
        /// Gets or sets comment blob type. Possible values include:
        /// 'Unknown', 'Image', 'Video', 'Custom'
        /// </summary>
        [JsonProperty(PropertyName = "blobType")]
        public BlobType? BlobType { get; set; }

        /// <summary>
        /// Gets or sets comment blob handle
        /// </summary>
        [JsonProperty(PropertyName = "blobHandle")]
        public string BlobHandle { get; set; }

        /// <summary>
        /// Gets or sets comment language
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Text == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Text");
            }
        }
    }
}
