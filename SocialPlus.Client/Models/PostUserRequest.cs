// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
// the MIT License. See LICENSE in the project root for license information.
// <autogenerated> This file was generated using AutoRest. </autogenerated>

namespace SocialPlus.Client.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Request to post (create) user
    /// </summary>
    public partial class PostUserRequest
    {
        /// <summary>
        /// Initializes a new instance of the PostUserRequest class.
        /// </summary>
        public PostUserRequest() { }

        /// <summary>
        /// Initializes a new instance of the PostUserRequest class.
        /// </summary>
        public PostUserRequest(string instanceId, string firstName, string lastName, string bio = default(string), string photoHandle = default(string))
        {
            InstanceId = instanceId;
            FirstName = firstName;
            LastName = lastName;
            Bio = bio;
            PhotoHandle = photoHandle;
        }

        /// <summary>
        /// Gets or sets instance id -- Unique installation id of the app
        /// </summary>
        [JsonProperty(PropertyName = "instanceId")]
        public string InstanceId { get; set; }

        /// <summary>
        /// Gets or sets first name of the user
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or sets last name of the user
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or sets short bio of the user
        /// </summary>
        [JsonProperty(PropertyName = "bio")]
        public string Bio { get; set; }

        /// <summary>
        /// Gets or sets photo handle of the user
        /// </summary>
        [JsonProperty(PropertyName = "photoHandle")]
        public string PhotoHandle { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (InstanceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InstanceId");
            }
            if (FirstName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FirstName");
            }
            if (LastName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LastName");
            }
        }
    }
}
