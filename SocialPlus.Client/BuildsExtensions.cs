// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
// the MIT License. See LICENSE in the project root for license information.
// <autogenerated> This file was generated using AutoRest. </autogenerated>

namespace SocialPlus.Client
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// Extension methods for Builds.
    /// </summary>
    public static partial class BuildsExtensions
    {
            /// <summary>
            /// The build information for this service
            /// </summary>
            /// This API is meant to be called by humans for debugging
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static BuildsCurrentResponse GetBuildsCurrent(this IBuilds operations)
            {
                return Task.Factory.StartNew(s => ((IBuilds)s).GetBuildsCurrentAsync(), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// The build information for this service
            /// </summary>
            /// This API is meant to be called by humans for debugging
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BuildsCurrentResponse> GetBuildsCurrentAsync(this IBuilds operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetBuildsCurrentWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
